version: '3'

services:
  db:
    image: postgres:12-alpine
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - db:/var/lib/postgresql/data

  app:
    image: cthulhoo/ttrss-fpm-pgsql-static
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DB_NAME=${POSTGRES_USER}
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASSWORD}
    volumes:
      - app:/var/www/html
      - ./config.d:/opt/tt-rss/config.d:ro
    depends_on:
      - db

  backups:
    image: cthulhoo/ttrss-fpm-pgsql-static
    restart: unless-stopped
    environment:
      - DB_NAME=${POSTGRES_USER}
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASSWORD}
    volumes:
      - backups:/backups
      - app:/var/www/html
    depends_on:
      - db
    command: /dcron.sh -f

  updater:
    image: cthulhoo/ttrss-fpm-pgsql-static
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DB_NAME=${POSTGRES_USER}
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASSWORD}
    volumes:
      - app:/var/www/html
      - ./config.d:/opt/tt-rss/config.d:ro
    depends_on:
      - app
    command: /updater.sh

#  web:
#    image: cthulhoo/ttrss-web
#    restart: unless-stopped
#    ports:
#      - ${HTTP_PORT}:2015
#    volumes:
#      - app:/var/www/html:ro
#    depends_on:
#      - app

#  web-ssl:
#    image: cthulhoo/ttrss-web-ssl
#    restart: unless-stopped
#    environment:
#      - CADDYPATH=/certs
#      - HTTP_HOST=${HTTP_HOST}
#    ports:
#      - 80:80
#      - 443:443
#    volumes:
#      - app:/var/www/html:ro
#      - certs:/certs
#    depends_on:
#      - app

  web-nginx:
    image: cthulhoo/ttrss-web-nginx
    restart: unless-stopped
    ports:
      - ${HTTP_PORT}:80
    volumes:
      - app:/var/www/html:ro
    depends_on:
      - app

volumes:
  db:
  app:
  certs:
  backups:
